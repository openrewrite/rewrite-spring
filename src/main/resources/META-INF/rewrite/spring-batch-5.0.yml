#
# Copyright 2024 the original author or authors.
# <p>
# Licensed under the Moderne Source Available License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# <p>
# https://docs.moderne.io/licensing/moderne-source-available-license
# <p>
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
type: specs.openrewrite.org/v1beta/recipe

name: org.openrewrite.java.spring.batch.SpringBatch4To5Migration
displayName: Migrate to Spring Batch 5.0 from 4.3
description: Migrate applications built on Spring Batch 4.3 to the latest Spring Batch 5.0 release.
tags:
  - spring
  - batch
recipeList:
  - org.openrewrite.java.dependencies.UpgradeDependencyVersion:
      groupId: org.springframework.batch
      artifactId: "*"
      newVersion: 5.0.x
      overrideManagedVersion: false
  - org.openrewrite.java.spring.batch.ListenerSupportClassToInterface
  - org.openrewrite.java.spring.batch.MigrateJobBuilderFactory
  - org.openrewrite.java.spring.batch.MigrateStepBuilderFactory
  - org.openrewrite.java.spring.batch.MigrateItemWriterWrite
  - org.openrewrite.java.spring.batch.RemoveDefaultBatchConfigurer
  - org.openrewrite.java.spring.batch.UpgradeSkipPolicyParameterType
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.batch.core.metrics.BatchMetrics
      newFullyQualifiedTypeName: org.springframework.batch.core.observability.BatchMetrics
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.batch.core.step.item.Chunk
      newFullyQualifiedTypeName: org.springframework.batch.item.Chunk
  - org.openrewrite.java.ChangeType:
      oldFullyQualifiedTypeName: org.springframework.batch.core.configuration.annotation.ScopeConfiguration
      newFullyQualifiedTypeName: org.springframework.batch.core.configuration.support.ScopeConfiguration
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.batch.ListenerSupportClassToInterface
displayName: Transform classes that extend `*ListenerSupport` to implement the `*Listener` interfaces instead
description: As of 5.0 `*Listener` interfaces default methods (made possible by a Java 8 baseline) can be implemented directly without the need for the adapter.
recipeList:
  - org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      fullyQualifiedClassName: org.springframework.batch.core.listener.JobExecutionListenerSupport
      fullyQualifiedInterfaceName: org.springframework.batch.core.JobExecutionListener
  - org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      fullyQualifiedClassName: org.springframework.batch.core.listener.StepExecutionListenerSupport
      fullyQualifiedInterfaceName: org.springframework.batch.core.StepExecutionListener
  - org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      fullyQualifiedClassName: org.springframework.batch.core.listener.ChunkListenerSupport
      fullyQualifiedInterfaceName: org.springframework.batch.core.ChunkListener
  - org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      fullyQualifiedClassName: org.springframework.batch.core.listener.SkipListenerSupport
      fullyQualifiedInterfaceName: org.springframework.batch.core.SkipListener
  - org.openrewrite.java.spring.batch.ReplaceSupportClassWithItsInterface:
      fullyQualifiedClassName: org.springframework.batch.repeat.listener.RepeatListenerSupport
      fullyQualifiedInterfaceName: org.springframework.batch.repeat.RepeatListener
---
type: specs.openrewrite.org/v1beta/recipe
name: org.openrewrite.java.spring.batch.UpgradeSkipPolicyParameterType
displayName: Change the type of `skipCount` parameter in `SkipPolicy` from `int` to `long`
description: The `skipCount` parameter in `org.springframework.batch.core.step.skip.SkipPolicy#shouldSkip` has been changed from `int` to `long`, this recipe updates the parameter type in the implementing classes.
recipeList:
  - org.openrewrite.java.spring.ChangeMethodParameter:
      methodPattern: org.springframework.batch.core.step.skip.SkipPolicy shouldSkip(java.lang.Throwable, int)
      parameterIndex: 1
      parameterType: long
